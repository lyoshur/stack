<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>TCP/IP on 羡鱼先生的空间</title>
        <link>https://lyoshur.github.io/stack/tags/tcp/ip/</link>
        <description>Recent content in TCP/IP on 羡鱼先生的空间</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language><atom:link href="https://lyoshur.github.io/stack/tags/tcp/ip/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>TCP/IP基础知识</title>
        <link>https://lyoshur.github.io/stack/p/tcp/ip%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
        <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
        
        <guid>https://lyoshur.github.io/stack/p/tcp/ip%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
        <description>&lt;h1 id=&#34;tcpip基础知识&#34;&gt;TCP/IP基础知识&lt;/h1&gt;
&lt;p&gt;这里采用广泛使用的4层模型来介绍TCP协议层次&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;网络接口层&lt;/p&gt;
&lt;p&gt;网络接口层（Network Interface Layer）又称网络访问层（Network Access Layer），包括OSI的物理层和链路层，负责向网络物理介质发送数据包，从网络物理介质接收数据包。TCP/IP并没有对物理层和链路层进行定义，它只是支持现有的各种底层网络技术和标准。网络接口层涉及操作系统中的设备驱动程序和网络接口设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络层&lt;/p&gt;
&lt;p&gt;网络层又称为互联网层或IP层，负责处理IP数据包的传输、路由选择、流量控制和拥塞控制。&lt;/p&gt;
&lt;p&gt;IP协议（Internet Protocol）既是网络层的核心协议，也是TCP/IP协议簇中的核心协议。网络互联的基本功能主要是由IP协议来完成的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARP用于根据IP地址获取物理地址。&lt;/li&gt;
&lt;li&gt;RARP用于根据物理地址查找其IP地址。&lt;/li&gt;
&lt;li&gt;Internet控制报文协议（Internet Control Message Protocol, ICMP）是主机和网关进行差错报告、控制和进行请求/应答的协议。&lt;/li&gt;
&lt;li&gt;Internet组管理协议（Internet Group Management Protocol, IGMP）用于实现组播中的组成员管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;传输层&lt;/p&gt;
&lt;p&gt;传输层为两台主机上的应用程序提供端到端的通信。TCP/IP的传输层包含传输控制协议TCP （Transmission Control Protocol）和用户数据报协议UDP（User Datagram Protocol）。这两种协议对应两类不同性质的服务，TCP为主机提供可靠的面向连接的传输服务；UDP为应用层提供简单高效的无连接传输服务。上层的应用进程可以根据可靠性要求或效率要求决定是使用TCP还是UDP来提供服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用层&lt;/p&gt;
&lt;p&gt;这个层次包括OSI的会话层、表示层和应用层，直接为特定的应用提供服务。应用层为用户提供一些常用的应用程序。TCP/IP给出了应用层的一些常用协议规范，如文件传输协议FTP、简单邮件传输协议SMTP、超文本传输协议HTTP等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TCP/IP网络中的节点之间的通信也要经过一层一层的信息转换来实现。源主机向目标主机发送数据，出站数据经过TCP/IP协议栈的每一层都被打包和标识，以便交付给下一层，这个过程就是封装。目标主机接收数据后，入站数据在被交付给上层协议之前，低层协议拆除封装信息，这个过程称作解封，又称分用（Demultiplexing）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;传输层TCP传给IP的数据单元称作TCP报文段或简称为TCP段（TCP Segment）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络层IP传给网络接口层的数据单元称作IP数据报（IP Datagram）&lt;/p&gt;
&lt;p&gt;严格地说，IP和网络接口层之间传送的数据单元应该是分组（Packet，又译为包）。分组既可以是一个IP数据报，也可以是IP数据报的一个分片（Fragment）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;路层通过以太网传输的比特流称作帧（Frame）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-tcpip协议重要概念&#34;&gt;1 TCP/IP协议重要概念&lt;/h2&gt;
&lt;h3 id=&#34;11-面向连接的协议与无连接的协议&#34;&gt;1.1 面向连接的协议与无连接的协议&lt;/h3&gt;
&lt;p&gt;如果采用面向连接的协议进行通信，想通信的一方就首先要和另一方的应用程字建立连接，就像打电话，只有当连接建立之后，才能进行通信。位于传输层的TCP就是面向连接协议的一个例子。&lt;/p&gt;
&lt;p&gt;无连接的协议在通信之前不用建立连接，就像寄信，只要有对方地址，就会正确地到达目的地。网络层的IP和传输层的UDP都是无连接协议。&lt;/p&gt;
&lt;h3 id=&#34;12-可靠的协议与不可靠的协议&#34;&gt;1.2 可靠的协议与不可靠的协议&lt;/h3&gt;
&lt;p&gt;可靠的协议保证数据能够传送到目的地，而且保证数据内容不会发生变化。TCP就是一个可靠的协议。&lt;/p&gt;
&lt;p&gt;不可靠的协议不保证数据能够传送到目的地，但是它们都会尽力传送数据，而且它们可以检验出到达目的地的数据是否完整。IP和UDP就是不可靠的协议。&lt;/p&gt;
&lt;h3 id=&#34;13-字节流协议与数据报协议&#34;&gt;1.3 字节流协议与数据报协议&lt;/h3&gt;
&lt;p&gt;字节流协议表示发送方和接收方将传输的数据看成是一串连续的字节串流。先发出的数据将会被先接收到，TCP就是这样的一个协议。&lt;/p&gt;
&lt;p&gt;数据报协议与字节流不同，它会将数据一个一个地传送。发送方先后向接收方发出两个数据报，接收方并不知道哪一个数据报会先被收到。IP和UDP就是这样的两个协议。如果要发送的信息不必讲求顺序，则可以选择UDP传输。而如果使用UDP发送有顺序的数据，并不是不可以，但是要对数据内容重新组合，这将加大程序复杂度。&lt;/p&gt;
&lt;h3 id=&#34;14-ip地址&#34;&gt;1.4 IP地址&lt;/h3&gt;
&lt;p&gt;在TCP/IP网络上，每个主机都有唯一的地址，它是通过IP协议来实现的。IP协议要求在每次与IP网络建立连接时，每台主机都必须为这个连接分配一个唯一的地址。IP地址不但可以用来识别每一台主机，而且隐含着网际间的路径信息。&lt;/p&gt;
&lt;h3 id=&#34;15-tcpip协议号端口号及插座&#34;&gt;1.5 TCP/IP协议号、端口号及插座&lt;/h3&gt;
&lt;p&gt;TCP/IP网络支持“多路复用”（Multiplexing），将来自许多应用程序的数据进行组合，传递给传输层（TCP或UDP），再由传输层传递给网络层（IP），其中，IP利用协议号来指定传输协议，传输层的TCP和UDP采用端口号来识别应用程序。&lt;/p&gt;
&lt;h3 id=&#34;16-关键名词&#34;&gt;1.6 关键名词&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MTU：（Maximum Transmission Unit, MTU）链路层的这个特性称作最大传输单元&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前导帧：&lt;/p&gt;
&lt;p&gt;在IP数据报被发送到传输介质之前，数据链路驱动程序将前导帧加在以太网帧上。传输介质刚开始接收来自链路层的MAC帧时，由于尚未与到达的比特（位）流达成同步，以太网帧前面的若干个比特就无法接收，结果会使整个帧成为无用的帧。如图2-4所示，为达到与比特流同步，从MAC子层向下传到物理层时还要在MAC帧的前面插入8字节的前导帧，它是由硬件自动生成的。前导帧由两个字段构成，第1字段称为前导码（Preamble），每个字节内容是十六进制数0xAA（由交替的1和0组成），使接收端在接收以太网帧时能够实现同步，又称前同步码；第2字段称为起始帧定界符（Start Frame Delimiter, SFD），值为十六进制数0xAB（10101011），标识以太网帧的开始。注意前导帧不计入以太网帧的长度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;帧校验&lt;/p&gt;
&lt;p&gt;以太网帧的内容需要执行一个循环冗余校验（Cyclical Redundancy Check,CRC）过程，校验计算的结果放在帧的末尾Frame Check Sequence（帧校验序列）字段中。注意校验范围并不包括前导帧。最后，网卡发送该MAC帧，前面加上前导码，它是一个接收端用于正确地将比特（位）解释为1或0的前导位模式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
